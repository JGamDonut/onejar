//
// functions
//


// global helper functions
// stripe unit from value
@function strip-unit($value) {
	@return ($value / ($value * 0 + 1));
}




// CONVERT TO 'EM'
// convert a given pixel or unitless values to em
// usage:
//  font-size: em(20px);
//  font-size: em(20);
@function to-em($target, $context: $base-size) {
    // sass function to check if unit exist
    // make unitless value to pixel
    @if (unitless($target)) {
        $target: $target + 0px;
        $context: $context + 0px;
    } 

    $em: ($target / $context) + 0em;
    @return $em;
}




// CONVERT TO 'REM'
// convert a given pixel or unitless values to rem
// usage:
//  font-size: rem(20px);
//  font-size: rem(20);
@function to-rem($px) {
    // stripe unit from value
    $val: strip-unit($px);

    $rem: ($val / ($base-size / 1px) ) + 0rem;
    @return $rem;
}









// GETS OPPOSITE DIRECTION
// usage: opposite-direction('right');
@function opposite-direction($direction) {
    //scss function to lowercase the value
    $direction: to-lower-case($direction);

    //define the map with opposite values
    $opposite-direction-map: (
      'top': 'bottom',
      'right': 'left',
      'bottom': 'top',
      'left': 'right'
    );
    
    // return map value and remove quotes.
    @return unquote(map-get($opposite-direction-map, $direction));
  }